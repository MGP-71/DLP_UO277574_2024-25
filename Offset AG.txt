ATTRIBUTE GRAMMAR

ABSTRACT GRAMMAR (G)
(2) VarDefinition: vardefinition -> ID type
(3) FuncDefinition: funcdefinition ->  ID functype statement*
(25) FuncType: type -> vardefinition* type
(26) StructType: type -> field*

ATTRIBUTES (A)
vardefinition.scope = Int
vardefinition.offset = Int
field.offset = Int
type.numberOfBytes = Int

RULES (R)
(2) if (vardefinition.scope == 0) {
        vardefinition.offset = globalByteSum;
        globalByteSum += type.numberOfBytes;
    }
(3) int localsByteSum = 0;
        for (Statement st: statement*) {
            if (st instanceof VariableDefinition) {
                localsByteSum += ((VariableDefinition) st).getType().numberOfBytes;
                 ((VariableDefinition) st).offset=-localsByteSum;
            }
        }
(25) int paramsByteSum = 0;
     for (int i = vardefinition*.size() - 1; i >= 0; i--) {
        vardefinition*.get(i).offset=4+paramsByteSum;
        paramsByteSum += vardefinition*.get(i).type.numberOfBytes;
     }
(26) int fieldsByteSum = 0;
     for (Field f: field*) {
        f.offset=fieldsByteSum;
        fieldsByteSum += f.getFieldType().numberOfBytes;
     }